HEX
( FORGET AX
( A400 DP !
USER AX
USER STP
USER PORT
USER READYFLAG
VARIABLE OLDTOOLMODE
0 OLDTOOLMODE !
USER ARG

: BLUETOOTH 1 BT ! 1 PORT ! 2 TMODE ! ;
: TEACHPAD 0 BT ! 0 PORT ! 1 TMODE ! ;
: INIT1
68 1F JUMP
;

: MODE MODE
TOOLMODE C@ IF ." TOOL " ELSE ." WORLD " THEN
;

DECIMAL

: GOTHERE
TRANSFORM
QUITFLAG C@ 0= IF -GOTO ELSE DROP THEN
;
: ZTOOL
(ZTOOL)
GOTHERE
;
( : PD CR DX ? DY ? DZ ? ;


: NEG 0 SWAP - ;
: DOIT
DX @ X +! DY @ Y +! DZ @ Z +!
( GOTHERE
;
: MSIN 10 * SIN M* 10000 M/ ;
: MCOS 10 * COS M* 10000 M/ ;
: YYY
 0 DX ! 0 DY ! 0 DZ !
DUP ARG !
DUP 0 ROLL @ - MCOS NEG DY ! ( ROLL Y
0 ROLL @ - MSIN NEG DX ! ( ROLL X
( PD
;
: XXX
 0 DX ! 0 DY ! 0 DZ !
DUP ARG !
DUP 0 ROLL @ - MCOS DX ! ( ROLL X
0 ROLL @ - MSIN NEG DY ! ( ROLL Y
( PD
;
: STEP2
DY @ PITCH @ MSIN NEG DZ +! ( TAKE SOME DY INTO DZ
DY @ PITCH @ MCOS DY !
( PD
;
: STEP3
DX @ YAW @ MSIN NEG DY +! ( TAKE SOME DX INTO DY
DX @ YAW @ MCOS DX !
( PD
;
: (YTOOL)
 0 DX ! 0 DY ! 0 DZ !
CARTMODE C@ 0= ( IF NOT ALREADY IN CARTESIAN MODE )
FCART C@ 0= ( CART MODE BUT NOT VALID )
OR IF COMPUTE THEN
SAVEAXES
YYY
STEP2
STEP3
DOIT
;

: YTOOL
(YTOOL)
GOTHERE
;
: (XTOOL)
 0 DX ! 0 DY ! 0 DZ !
CARTMODE C@ 0= ( IF NOT ALREADY IN CARTESIAN MODE )
FCART C@ 0= ( CART MODE BUT NOT VALID )
OR IF COMPUTE THEN
SAVEAXES
XXX
STEP2
STEP3
DOIT
;
: XTOOL
(XTOOL)
GOTHERE
;

HEX
: MOVIT
QUITFLAG C0SET
AX !
BANK C0SET
    PAD 1+ C@ DUP 50 = IF INCR @ AX @ +! THEN
           4D = IF 0 INCR @ - AX @ +! THEN
TRANSFORM
QUITFLAG C@ 0= IF -GOTO ELSE DROP THEN
IOFLAG C0SET
;
: WH
BT @ 0= IF CR THEN
QUITFLAG C@ 0= IF
 PORT @ IOFLAG ! ( 0D EMIT ) 43 EMIT X ? Y ? Z ? PITCH ? YAW ? ROLL ? 0D EMIT
THEN
 IOFLAG C0SET
BT @ 0= IF CR THEN
;

: HEA

  DUP 47 = IF ( G GRIP
     PAD 1+ C@ DUP 50 = IF GRIP THEN
                   4D = IF UNGRIP THEN
  THEN

  DUP 48 = IF ( H WHERE
     WH
  THEN

  DUP 45 = IF ( E READY
     READYFLAG C@ IF
       READY DUP 0= IF BADVAL THEN
     ELSE
       READYFLAG C1SET
     THEN
  THEN

     41 = IF ( A ALIGN
     FALIGN @ IF NONALIGN ELSE ALIGN THEN
  THEN
;
: XYZ
  DUP 58 = IF ( X
    TOOLMODE @ IF
      INCR @
      PAD 1+ C@ 4D = IF 0 SWAP - THEN
      XTOOL
    ELSE 
     X MOVIT
    THEN
  THEN

  DUP 59 = IF ( Y
    TOOLMODE @ IF
      INCR @
      PAD 1+ C@ 4D = IF 0 SWAP - THEN
      YTOOL
    ELSE 
      Y MOVIT
    THEN
  THEN

      5A = IF ( Z
    TOOLMODE @ IF
      INCR @
      PAD 1+ C@ 4D = IF 0 SWAP - THEN
      ZTOOL
    ELSE 
      Z MOVIT
    THEN
  THEN
;
: XYZTOOL
    54 = IF  ( T
      TOOLMODE @ 0 = IF
         TOOL
         0D EMIT 4D EMIT ." TOOL MODE" 0D EMIT
      ELSE
         WORLD
         0D EMIT 4D EMIT ." WORLD MODE" 0D EMIT
      THEN
      PORT @ 0= IF CR THEN
   THEN
;

: LRN
  TOOLMODE C@ OLDTOOLMODE C!
  LEARN
  IOFLAG C0SET
  24 EMIT
( This sends $ to RobWin.
(    SPACE ." OK" CR
( Robwin then sends back esc which terminates TEACH and JOG
  KEY DROP ( Gets rid of the esc char.
( RobWin then sends CF to ask where robot is. Adds coordinates to selected route.
( Then sends JOG again to restart. JOG restarts in BLUETOOTH mode because BT=1
;
: UNLRN
  TOOLMODE C@ OLDTOOLMODE C!
  UNLEARN
  IOFLAG C0SET
  25 EMIT
(    SPACE ." OK" CR
  KEY DROP ( ROBWIN SENDS ESC TO EXIT JOG THEN SENDS JOG AGAIN
;

: TEXPECT
0 PAD PAD 10 + FILL
10 0 DO
   KEY DUP PAD I + C!
   0D = IF LEAVE THEN
LOOP
;
: NEXUS
ACCEL @ SAVSPEED ! 1F4 ( 500 ) ACCEL !
BT @ IF ." BLUETOOTH " THEN
INIT1
2 TMODE !
0 STP !
OLDTOOLMODE @ TOOLMODE !
0 READYFLAG !
SAVEAXES
BEGIN
  PORT @ IOFLAG !
0D EMIT
  ( PAD 40 ) TEXPECT

  PAD C@ DUP 53 = IF 1 STP ! THEN ( S

    PAD 2+ NUMBER DUP 0 > IF INCR ! ELSE DROP THEN

  DUP XYZTOOL

  DUP XYZ

  DUP HEA

  DUP 46 = IF  ( F
    FN @ IF FN @ EXECUTE THEN
  THEN

  DUP 50 = IF ( P
    PITCH MOVIT
  THEN

  DUP 57 = IF ( W
    YAW MOVIT
  THEN

  DUP 52 = IF ( R
    ROLL MOVIT
  THEN

  WH

  DUP 4C = IF ( L
LRN
  THEN
      55 = IF ( U
UNLRN
  THEN

STP @ IF 0 PORT ! ." STOP " CR 0 OLDTOOLMODE ! THEN
STP @ ?TERMINAL OR UNTIL
0 TMODE !
SAVSPEED @ ACCEL !
;
: NEXPAD
BLUETOOTH
NEXUS
;
: JOG
BT @ IF 64 ( 100 ) INCR ! NEXPAD ELSE JOG ( OLD ) THEN
;

: RCOM
INIT1
CR
BEGIN
  IOFLAG C1SET
  TEXPECT
  IOFLAG C0SET
  PAD 6 TYPE CR
?TERMINAL UNTIL
;
: TCOM
INIT1
BEGIN
  PAD 10 EXPECT
  IOFLAG C1SET 4D EMIT PAD 10 TYPE 0D EMIT IOFLAG C0SET
?TERMINAL UNTIL
;
 0B ' PSAVE 2+ ! ( CHANGE PSAVE FROM 4-A TO 4-B
 B000 DP !
 HERE 9FFA ! CONTEXT @ 9FFC ! UVP @ 9FFE !
DECIMAL