HEX
( FORGET AX
USER AX
USER STP
USER PORT
USER READYFLAG
VARIABLE OLDTOOLMODE
0 OLDTOOLMODE !

: MODE MODE ( THIS IS A PC COMMAND NOT NEXUS
TOOLMODE C@ IF ." TOOL " ELSE ." WORLD " THEN
;
: ZTOOL PLUNGE ;

DECIMAL

: YTOOL
CARTMODE C@ 0= ( IF NOT ALREADY IN CARTESIAN MODE )
FCART C@ 0= ( CART MODE BUT NOT VALID )
OR IF COMPUTE THEN
SAVEAXES
TRIANGULATE ( TO FIND EXISTING VALUE OF LEN )
( ARG ) DUP 0 PITCH @ 10 * - COS M* 10000 M/ Z +!
( ARG )     PITCH @ 10 * SIN M* 10000 M/ ( EXTRA LENGTH IN Y PLANE )
( MODIFY dY dX BY W
( ARG ) DUP 0 W @ 10 * - COS M* 10000 M/ Y +!
( ARG )     W @ 10 * SIN M* 10000 M/ X +! ( EXTRA LENGTH IN Y PLANE )
( FALIGN C1SET ( DOESNT HAVE TO BE VERTICAL
TRANSFORM -GOTO
;
: XTOOL
CARTMODE C@ 0= ( IF NOT ALREADY IN CARTESIAN MODE )
FCART C@ 0= ( CART MODE BUT NOT VALID )
OR IF COMPUTE THEN
SAVEAXES
TRIANGULATE ( TO FIND EXISTING VALUE OF LEN )
( ARG ) ( DUP 0 PITCH @ 10 * - COS M* 10000 M/ Z +!
( ARG )     PITCH @ 10 * SIN M* 10000 M/ ( EXTRA LENGTH IN Y PLANE )
( MODIFY dX dY BY W
( ARG ) DUP W @ 10 * COS M* 10000 M/ X +!
( ARG )     W @ 10 * SIN M* 10000 M/ 0 SWAP - Y +! ( EXTRA LENGTH IN Y PLANE )
FALIGN C1SET ( MUST BE VERTICAL
TRANSFORM -GOTO
;


HEX

: BLUETOOTH 1 BT ! 1 PORT ! ;
: TEACHPAD 0 BT ! 0 PORT ! ;
: INIT1
68 1F JUMP
;

: MOVIT
QUITFLAG C0SET 
AX !
BANK C0SET
    PAD 1+ C@ DUP 50 = IF INCR @ AX @ +! THEN
           4D = IF 0 INCR @ - AX @ +! THEN
PORT @ IOFLAG !
TRANSFORM ( TOOLMODE @ 0= IF TRANSFORM THEN
QUITFLAG C@ 0= IF -GOTO ELSE DROP THEN
IOFLAG C0SET
;
: WH
QUITFLAG C@ 0= IF
 PORT @ IOFLAG ! ( 0D EMIT ) 43 EMIT X ? Y ? Z ? PITCH ? 0 . W ? 0D EMIT
THEN
 IOFLAG C0SET
;

: HEA

  DUP 47 = IF ( G GRIP
     PAD 1+ C@ DUP 50 = IF GRIP THEN
                   4D = IF UNGRIP THEN
  THEN

  DUP 48 = IF ( H WHERE
     WH
  THEN

  DUP 45 = IF ( E READY
     READYFLAG C@ IF
       READY DUP 0= IF BADVAL THEN
     ELSE
       READYFLAG C1SET
     THEN
  THEN

     41 = IF ( A ALIGN
     FALIGN @ IF NONALIGN ELSE ALIGN THEN
  THEN
;
: XYZ
  DUP 58 = IF  ( X )
    TOOLMODE @ IF
      PAD 1+ C@ 4D = IF 0 INCR @ - INCR ! THEN
      INCR @ XTOOL
    ELSE 
      X MOVIT
    THEN
  THEN

  DUP 59 = IF  ( Y )
    TOOLMODE @ IF
      PAD 1+ C@ 4D = IF 0 INCR @ - INCR ! THEN
      INCR @ YTOOL
    ELSE 
      Y MOVIT
    THEN
  THEN

      5A = IF  ( Z )
    TOOLMODE @ IF
      PAD 1+ C@ 4D = IF 0 INCR @ - INCR ! THEN
      INCR @ ZTOOL
    ELSE 
      Z MOVIT
    THEN
  THEN
;
: XYZTOOL
    54 = IF  ( T
      PORT @ 0= IF CR THEN
    TOOLMODE @ 0 = IF
      TOOL
      ( 0D EMIT ) 4D EMIT ." TOOL MODE" 0D EMIT
    ELSE
      WORLD
      ( 0D EMIT ) 4D EMIT ." WORLD MODE" 0D EMIT
    THEN
(      PORT @ 0= IF CR THEN
  THEN
;

: LRN
  TOOLMODE C@ OLDTOOLMODE C!
  LEARN
  IOFLAG C0SET
  24 EMIT
( This sends $ to RobWin.
(    SPACE ." OK" CR
( Robwin then sends back esc which terminates TEACH and JOG
  KEY DROP ( Gets rid of the esc char.
( RobWin then sends CF to ask where robot is. Adds coordinates to selected route.
( Then sends JOG again to restart. JOG restarts in BLUETOOTH mode because BT=1
;
: UNLRN
  TOOLMODE C@ OLDTOOLMODE C!
  UNLEARN
  IOFLAG C0SET
  25 EMIT
(    SPACE ." OK" CR
  KEY DROP ( ROBWIN SENDS ESC TO EXIT JOG THEN SENDS JOG AGAIN
;

: TEXPECT
0 PAD PAD 10 + FILL
10 0 DO
   KEY DUP PAD I + C!
   0D = IF LEAVE THEN
LOOP
;

: NEXUS
INIT1
2 TMODE !
0 STP !
OLDTOOLMODE @ TOOLMODE !
0 READYFLAG !
SAVEAXES
BEGIN
  PORT @ IOFLAG !
0D EMIT
  ( PAD 40 ) TEXPECT
  PAD C@ DUP 53 = IF 1 STP ! THEN ( S

      PAD 2+ NUMBER DUP 0 > IF INCR ! ELSE DROP THEN

  DUP XYZTOOL

  DUP XYZ

  DUP HEA

  DUP 46 = IF  ( F
    FN @ EXECUTE
  THEN

  DUP 50 = IF ( P
    PITCH MOVIT
  THEN

  DUP 52 = IF ( R
     W MOVIT
  THEN

  WH

  DUP 4C = IF ( L
LRN
  THEN
      55 = IF
UNLRN
  THEN

STP @ IF 0 PORT ! ." STOP " CR 0 OLDTOOLMODE ! THEN

STP @ ?TERMINAL OR UNTIL
;
: NEXPAD
BLUETOOTH ." BLUETOOTH "
NEXUS
;
: JOG
BT @ IF 64 ( 100 ) INCR ! NEXPAD ELSE JOG ( OLD ) THEN
;
: COMLIST
CR ." XPval XMval YPval YMval ZPval ZMval PPval PMval WPval WMval RPval RMval"
CR ." GP GM H (WH) E (READY) A (ALIGN) T (TOOL) F (FN) L U S" CR
;
: RCOM
INIT1
CR
BEGIN
  IOFLAG C1SET
  TEXPECT
  IOFLAG C0SET
  PAD 6 TYPE CR
?TERMINAL UNTIL
;
: TCOM
INIT1
BEGIN
  PAD 10 EXPECT
  IOFLAG C1SET 4D EMIT PAD 10 TYPE 0D EMIT IOFLAG C0SET
?TERMINAL UNTIL
;

0B ' PSAVE 2+ ! ( CHANGE PSAVE FROM 4-A TO 4-B
B000 DP !
HERE 9FFA ! CONTEXT @ 9FFC ! UVP @ 9FFE !
DECIMAL